<%= content_for(:js_header) do %>
  <%= javascript_include_tag "http://d3js.org/d3.v2.js" %>
<% end %>
<%= @suburb_data %>
<script type="text/javascript">

//////////// READY ///////////
jQuery(document).ready(function() {
var a = "<%= @suburb["summary"]["ethnicity"] %>";
var decoded = jQuery("<div/>").html(a).text();
console.log(decoded);
doBornPieChart(decoded);
});
/////////////////////////////

function doBornPieChart(dataObj) {
alert(dataObj);
	// This is an array.
	ethBreak = eval(dataObj);
	
	var w = 300, //width
	h = 200, //height
	r = 100, //radius
	color = d3.scale.category20c(); //builtin range of colors
	
	data = ethBreak;
	
	var vis = d3.select("div#chartHere")
	.append("svg:svg") //create the SVG element inside the <body>
	.data([data]) //associate our data with the document
	.attr("width", w) //set the width and height of our visualization (these will be attributes of the <svg> tag
	.attr("height", h)
	.append("svg:g") //make a group to hold our pie chart
	.attr("transform", "translate(" + r + "," + r + ")") //move the center of the pie chart from 0, 0 to radius, radius
	 
	var arc = d3.svg.arc() //this will create <path> elements for us using arc data
	.outerRadius(r);
	 
	var pie = d3.layout.pie() //this will create arc data for us given a list of values
	.value(function(d) { return d.value; }); //we must tell it out to access the value of each element in our data array
	 
	var arcs = vis.selectAll("g.slice") //this selects all <g> elements with class slice (there aren't any yet)
	.data(pie) //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties)
	.enter() //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
	.append("svg:g") //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
	.attr("class", "slice"); //allow us to style things in the slices (like text)
	 
	var dataColour = [];
	
	arcs.append("svg:path")
	.attr("fill", function(d, i) {
		var c = color(i);
		dataColour.push(c);
		return c;
	} ) //set the color for each slice to be chosen from the color function defined above
	.attr("d", arc); //this creates the actual SVG path using the associated data (pie) with the arc drawing function

	for (var i = 0; i < data.length; ++i) {
		var d = data[i];
		var c = dataColour[i];
		jQuery("#legendHere").append(
			'<tr><td bgcolor="' + c + '">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td>' + d.key + '</td></tr>'
			);
	}
	
	/*
	arcs.append("svg:text") //add a label to each slice
	.attr("transform", function(d) { //set the label's origin to the center of the arc
	//we have to make sure to set these before calling arc.centroid
	d.innerRadius = 0;
	d.outerRadius = r;
	return "translate(" + arc.centroid(d) + ")"; //this gives us a pair of coordinates like [50, 50]
	})
	.attr("text-anchor", "middle") //center the text on it's origin
	.text(function(d, i) {
		var p = data[i].key;
		alert(p);
		return p; }); //get the label from our original data array
		*/
}

</script>

<H2>chart</h2>
<div id="chartHere"></div>
<div>
<table id="legendHere">
</table>
